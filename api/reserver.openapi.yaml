openapi: 3.0.0
servers:
  - description: Cluster Endpoint
    url: /api
info:
  description: Room and ambulance reservation management for Web-In-Cloud system
  version: "1.0.0"
  title: Reserver Api
  contact:
    email: xhozza@stuba.sk
  license:
    name: CC BY 4.0
    url: "https://creativecommons.org/licenses/by/4.0/"
tags:
  - name: examinationReservation
    description: Ambulance reservation API
  - name: roomReservation
    description: Room reservation API
  - name: departments
    description: Departments API
paths:
  "/departments":
    get:
      tags:
        - departments
      summary: Provide the list of all departments
      operationId: getDepartments
      description: Use this method to get list of all departments
      responses:
        "200":
          description: List of departments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Department"
              examples:
                response:
                  $ref: "#/components/examples/DepartmentListExample"
  "/doctors":
    get:
      tags:
        - departments
      summary: Provide list of all doctors
      operationId: getDoctors
      description: Use this method to get list of all doctors with their department
      responses:
        "200":
          description: List of doctors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Doctor"
              examples:
                response:
                  $ref: "#/components/examples/DoctorListExample"
  "/rooms":
    get:
      tags:
        - roomReservation
      summary: Provides the list of all rooms
      operationId: getRooms
      description: Use this method to get list of all rooms
      responses:
        "200":
          description: List of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Room"
              examples:
                response:
                  $ref: "#/components/examples/RoomListExample"
  "/reservation":
    get:
      tags:
        - roomReservation
      summary: Provides the list of current reservations
      operationId: getReservations
      description: Use this method to get list of all reservations
      responses:
        "200":
          description: value of the reservations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoomReservation"
              examples:
                response:
                  $ref: "#/components/examples/RoomReservationListExample"
    post:
      tags:
        - roomReservation
      summary: Create new reservation
      operationId: createReservation
      description: Use this method to create new reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomReservation"
      responses:
        "201":
          description: Reservation created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomReservation"
              examples:
                response:
                  $ref: "#/components/examples/RoomReservationExample"
  "/reservation/{id}":
    get:
      tags:
        - roomReservation
      summary: Provides the reservation by id
      operationId: getReservationById
      description: Use this method to get reservation by id
      parameters:
        - name: id
          in: path
          description: ID of the reservation
          required: true
          schema:
            type: string
      responses:
        "200":
          description: value of the reservation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomReservation"
              examples:
                response:
                  $ref: "#/components/examples/RoomReservationExample"
        "404":
          description: Reservation not found
    put:
      tags:
        - roomReservation
      summary: Update reservation
      operationId: updateReservation
      description: Use this method to update reservation
      parameters:
        - name: id
          in: path
          description: ID of the reservation
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomReservation"
      responses:
        "200":
          description: Reservation updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomReservation"
              examples:
                response:
                  $ref: "#/components/examples/RoomReservationExample"
        "404":
          description: Reservation not found
    delete:
      tags:
        - roomReservation
      summary: Delete reservation
      operationId: deleteReservation
      description: Use this method to delete reservation
      parameters:
        - name: id
          in: path
          description: ID of the reservation
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Reservation deleted
        "404":
          description: Reservation not found
  "/examination":
    get:
      tags:
        - examinationReservation
      summary: Provides the list of current examinations
      operationId: getExaminations
      description: Use this method to get list of all examinations
      responses:
        "200":
          description: value of the examinations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Examination"
              examples:
                response:
                  $ref: "#/components/examples/ExaminationListExample"
    post:
      tags:
        - examinationReservation
      summary: Create new examination
      operationId: createExamination
      description: Use this method to create new examination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Examination"
      responses:
        "201":
          description: Examination created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Examination"
              examples:
                response:
                  $ref: "#/components/examples/ExaminationExample"
    
  "/examination/{id}":
    get:
      tags:
        - examinationReservation
      summary: Provides the examination by id
      operationId: getExaminationById
      description: Use this method to get examination by id
      parameters:
        - name: id
          in: path
          description: ID of the examination
          required: true
          schema:
            type: string
      responses:
        "200":
          description: value of the examination
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Examination"
              examples:
                response:
                  $ref: "#/components/examples/ExaminationExample"
        "404":
          description: Examination not found
    put:
      tags:
        - examinationReservation
      summary: Update examination
      operationId: updateExamination
      description: Use this method to update examination
      parameters:
        - name: id
          in: path
          description: ID of the examination
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Examination"
      responses:
        "200":
          description: Examination updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Examination"
              examples:
                response:
                  $ref: "#/components/examples/ExaminationExample"
        "404":
          description: Examination not found
    delete:
      tags:
        - examinationReservation
      summary: Delete examination
      operationId: deleteExamination
      description: Use this method to delete examination
      parameters:
        - name: id
          in: path
          description: ID of the examination
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Examination deleted
        "404":
          description: Examination not found
components:
  schemas:
    Department:
      type: object
      required: ["id", "name"]
      example:
        $ref: "#/components/examples/DepartmentExample"
      properties:
        id:
          type: string
          example: deparment-id-1
          description: Unique identifier of the department
        name:
          type: string
          example: Gastro-entrology
          description: Name of the hospital department
        description:
          type: string
          example: This is some long description
          description: Description of the department

    Doctor:
      type: object
      required: ["id", "name", "department"]
      example:
        $ref: "#/components/examples/DoctorExample"
      properties:
        id:
          type: string
          example: doctor-id-1
          description: Unique identifier of the department
        name:
          type: string
          example: Gastro-entrology
          description: Name of the hospital department
        department:
          type: string
          example: department-id-1
          description: ID of their department

    RoomReservation:
      type: object
      required: [ "id", "room", "department", "doctor"]
      example:
        $ref: "#/components/examples/RoomReservationExample"
      properties:
        id:
          type: string
          example: reservation-id-1
          description: Unique identifier of the reservation
        room:
          type: string
          example: room-id-1
          description: Room ID
        department:
          type: string
          example: department-id-1
          description: ID of the department
        doctor:
          type: string
          example: doctor-id-1
          description: ID of the doctor
    Room:
      type: object
      required: ["id", "roomNumber"]
      properties:
        id:
          type: string
          example: room-id-1
          description: Unique identifier of the room
        roomNumber:
          type: string
          example: 356 - 3.posch
          description: Room number
    Examination:
      type: object
      required: [ "id", "room", "department", "doctor", "patient", "datetime"]
      properties:
        id:
          type: string
          example: examination-id-1
          description: Unique identifier of the examination
        room:
          type: string
          example: room-id-1
          description: Room ID
        department:
          type: string
          example: department-id-1
          description: ID of the department
        doctor:
          type: string
          example: doctor-id-1
          description: ID of the doctor
        patient:
          type: string
          example: Janko Hruska
          description: Name of the patient
        datetime:
          type: string
          example: 2024-05-04T12:00:00
          description: Date and time of the examination

  examples:
    DepartmentExample:
      summary: Single department example
      description: Example of department
      value:
        id: deparment-id-1
        name: Gastro-entrology
        description: Cool department

    DepartmentListExample:
      summary: List of departments
      description: Example list of departments
      value:
        - id: deparment-id-1
          name: Gastro-entrology
          description: Cool department
        - id: deparment-id-2
          name: Chirurgy

    DoctorExample:
      summary: Single doctor example
      description: Example of doctor
      value:
        id: doctor-id-1
        name: Dr. Bobula Drefko
        department: deparment-id-1

    DoctorListExample:
      summary: List of doctors
      description: Example list of doctors
      value:
        - id: doctor-id-1
          name: Dr. Bobula Drefko
          department: deparment-id-1
        - id: doctor-id-2
          name: Dr. Pan Dreveny
          department: deparment-id-1
        - id: doctor-id-3
          name: Dr. Jozef Kukumberg
          department: deparment-id-2

    RoomReservationExample:
      summary: Room reservation example
      description: Example of room reservation
      value:
        id: reservation-id-1
        room: room-id-1
        department: deparment-id-1
        doctor: doctor-id-1

    RoomReservationListExample:
      summary: List of room reservations
      description: Example list of room reservations in the hospital
      value:
        - id: reservation-id-1
          room: room-id-1
          department: deparment-id-1
          doctor: doctor-id-1
        - id: reservation-id-2
          room: room-id-2
          department: deparment-id-1
          doctor: doctor-id-2
    RoomExample:
      summary: Single room example
      description: Example of room
      value:
        id: room-id-1
        roomNumber: 356 - 3.posch
    RoomListExample:
      summary: List of rooms
      description: Example list of rooms in the hospital
      value:
        - id: room-id-1
          roomNumber: 356 - 3.posch
        - id: room-id-2
          roomNumber: 356 - 2.posch
    ExaminationExample:
      summary: Examination example
      description: Example of examination
      value:
        id: examination-id-1
        room: room-id-1
        department: deparment-id-1
        doctor: doctor-id-1
        patient: Janko Hruska
        datetime: 2024-05-04T12:00:00
    ExaminationListExample:
      summary: List of examinations
      description: Example list of examinations in the hospital
      value:
        - id: examination-id-1
          room: room-id-1
          department: deparment-id-1
          doctor: doctor-id-1
          patient: Janko Hruska
          datetime: 2024-05-04T12:00:00
        - id: examination-id-2
          room: room-id-2
          department: deparment-id-1
          doctor: doctor-id-2
          patient: Majko Paradajka
          datetime: 2024-05-04T13:00:00
        - id: examination-id-3
          room: room-id-3
          department: deparment-id-2
          doctor: doctor-id-3
          patient: Lucinka Malicka
          datetime: 2024-05-04T13:30:00
